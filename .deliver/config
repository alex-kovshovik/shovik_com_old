#!/usr/bin/env bash
APP="shovik_com"

BUILD_HOST="138.197.21.158"
BUILD_USER="app"
BUILD_AT="/srv/www/shovik_com/edeliver"

RELEASE_STORE=app@138.197.21.158:/srv/www/shovik_com/release_store/

PRODUCTION_HOSTS="138.197.21.158"
PRODUCTION_USER="app"

DELIVER_TO="/srv/www/shovik_com"

pre_erlang_get_and_update_deps() {
  # copy it on the build host to the build directory when building
  local _secret_config_file_on_build_host="/srv/www/shovik_com/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    status "Linking '$_secret_config_file_on_build_host' to build config dir"
    __sync_remote "
      ln -sfn '$_secret_config_file_on_build_host' '$BUILD_AT/config/prod.secret.exs'
    "
  fi
}

pre_erlang_clean_compile() {
  status "Installing nodejs dependencies"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    cd '$BUILD_AT'

    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' npm install
  "

  status "Building brunch assets"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    cd '$BUILD_AT'

    mkdir -p priv/static
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' npm run deploy
  "

  status "Compiling code"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e #
    cd '$BUILD_AT'

    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD do deps.get, compile
  "

  status "Running phoenix.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e #
    cd '$BUILD_AT'

    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
  "
}
